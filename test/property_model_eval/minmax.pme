sheet minmax {
input:
    min_;
    max_;
interface:
    use_min : min_ == -9999 ? true : false;
    use_max : max_ == 9999 ? true : false;

    min_value : min_ <== use_min ? min_value : 0;
    max_value : max_ <== use_max ? max_value : 0;

logic:
    when (use_min && use_max) relate {
        min_value <== std.min(min_value, max_value );
        max_value <== std.max(min_value, max_value );
    }
output:
result <== { max_value: max_value, min_value:min_value };

};

check (minmax, {
    max_value: 0,
    min_value: 0,
    result: {
        max_value: 0,
        min_value: 0
    },
    use_max: false,
    use_min: false
});

reinitialize (minmax, {
    min_ : -9999,
    max_ : 9999
});

print(minmax, "after reinitialization" );
dump(minmax);

update (minmax, {
   min_value : 25 
});

print( minmax, "min_value updated" );

dump(minmax);

check (minmax, {
	max_value: 9999,
	min_value: 25,
	result: {
		max_value: 9999,
		min_value: 25
	},
	use_max: true,
	use_min: true
});

update (minmax, {
   max_value : 10 
});

print(minmax, "max_value updated");
dump(minmax);

check (minmax, {
	max_value: 10,
	min_value: 10,
	result: {
		max_value: 10,
		min_value: 10
	},
	use_max: true,
	use_min: true
})
