/**************************************************************************************************/

/*

    ADOBE CONFIDENTIAL
    ___________________

    Copyright 2003 - 2003 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: All information contained herein is, and remains the property of
    Adobe Systems Incorporated and its suppliers, if any. the intellectual and 
    technical concepts contained herein are proprietary to Adobe Systems Incorporated 
    and its suppliers and may be covered by U.S. and Foreign Patents, patents 
    in process, and are protected by trade secret or copyright law. Dissemination 
    of this information or reproduction of this material is strictly forbidden 
    unless prior written permission is obtained from Adobe Systems Incorporated.
 
*/

/**************************************************************************************************/

/*!
\defgroup concept_regular_type Regular
\ingroup asl_concepts

\description
The concept \ref concept_regular_type is the basic concept which allows for equational reasoning about
code. Each of the sub-concepts which it refines are interconnected by the axioms which cannot be
expressed until combined here.

\refinement_of
    - \ref stldoc_DefaultConstructible
    - \ref stldoc_Assignable
    - \ref stldoc_EqualityComparable

\notation

\valid_expressions
All expressions that match the above concepts are valid.

\expression_semantics
Given type \c T which models \ref concept_regular_type and an action \c zap() which always modifies
it's parameter:
	- <tt>T a = b; assert(a == b);</tt> <em>copies are equal</em>
	- <tt>T a; a = b;</tt> is equivalent to <tt>T a(b);</tt> <em>relate copy and assignment</em>
	- <tt>T a = c; T b = c; a = d; assert(b==c);</tt> <em>copies are disjoint</em>
	- <tt>T a = c; T b = c; zap(a); assert(b==c && a!=b);</tt> <em>copies don't intersect</em>

\models
	- int
    - adobe::name_t
    - adobe::copy_on_write

\notes

\see_also
    - Alex Stepanov's paper on the <a href="http://www.stepanovpapers.com/DeSt98.pdf">concept of
    regular types</a>.
    - \ref concept_movable.

\defgroup concept_movable Movable
\ingroup asl_concepts

\description
See [C++20 concept movable](https://en.cppreference.com/w/cpp/header/concepts.html).

\models
	- adobe::version_1::vector
	- adobe::version_1::string_t
	- adobe::version_1::closed_hash_set
	- adobe::version_1::closed_hash_map
	- adobe::copy_on_write

*/
